<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        xmlns:gif="http://wpfanimatedgif.codeplex.com" x:Class="WpfApp1.MainWindow"
        mc:Ignorable="d"
        Title="Hype" Height="448" Width="600"  ResizeMode="CanMinimize" Icon="/pics/dukenukem.png">


    <Grid>
        <Image Source="/pics/tenor.gif" Stretch="Fill" gif:ImageBehavior.AnimatedSource="/pics/tenor.gif"/>
        <TextBox x:Name="inputTextBox" TextWrapping="Wrap" Text="0" Margin="0,250,380,0" TextAlignment="Center" SnapsToDevicePixels="True" VerticalAlignment="Top" VerticalContentAlignment="Center" MaxHeight="32" MaxWidth="200" MinWidth="30" MaxLength="11" MaxLines="1" TextChanged="inputChanged" FontSize="32" Height="32" PreviewTextInput="input_PreviewTextInput" VerticalScrollBarVisibility="Disabled">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource BasedTextStyle}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="SelectionTextBrush" Value="Transparent"/>
                    <Setter Property="SelectionBrush" Value="#FFF17777"/>
                    <Setter Property="CaretBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="0,0,0,0"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromUSD}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Flag_of_the_United_States.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromEUR}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Flag_of_Europe.svg.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromRUB}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Flag_of_Russia.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromUAH}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/ukraine-flag_3000x2000.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromMDL}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Moldova_flag_large-02.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=toUSD}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=toEUR}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=toRUB}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=toUAH}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=toMDL}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBox x:Name="outputTextBox" TextWrapping="Wrap" Text="0" Margin="370,250,0,0" TextAlignment="Center" SnapsToDevicePixels="True" VerticalAlignment="Top" IsReadOnly="True" FontSize="32" Height="32" VerticalScrollBarVisibility="Disabled">
            <TextBox.Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource BasedTextStyle}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="SelectionTextBrush" Value="Transparent"/>
                    <Setter Property="SelectionBrush" Value="#FFF17777"/>
                    <Setter Property="CaretBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="0,0,0,0"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=toUSD}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Flag_of_the_United_States.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=toEUR}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Flag_of_Europe.svg.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=toRUB}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Flag_of_Russia.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=toUAH}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/ukraine-flag_3000x2000.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=toMDL}" Value="true">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/pics/Moldova_flag_large-02.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromUSD}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromEUR}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromRUB}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromUAH}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=fromMDL}" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush  ImageSource="/pics/images.png" Opacity="0.75"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <StackPanel x:Name="SellOrBuyPanel" Margin="120,0,150,378" Orientation="Horizontal">
            <RadioButton x:Name="BuyButton" Content="Buy" Margin="75,0,0,0" Checked="SB_Checked"/>
            <RadioButton x:Name="SellButton" Content="Sell" Margin="75,0,0,0" Checked="SB_Checked"/>
        </StackPanel>

        <Grid x:Name="ConversionPanel" UseLayoutRounding="True" Margin="0,0,0,0" VerticalAlignment="Top">

            <RadioButton x:Name="fromUSD" Content="USD" Height="32" Width="60" HorizontalAlignment="Left" Checked="from_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Flag_of_the_United_States.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="fromEUR" Content="EUR" Height="32" Width="60" Margin="0,45,0,0" HorizontalAlignment="Left" Checked="from_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Flag_of_Europe.svg.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="fromRUB" Content="RUB" Height="32" Width="60" Margin="0,90,0,0" HorizontalAlignment="Left" Checked="from_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Flag_of_Russia.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="fromUAH" Content="UAH" Height="32" Width="60" Margin="0,135,0,0" HorizontalAlignment="Left" Checked="from_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/ukraine-flag_3000x2000.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="fromMDL" Content="MDL" Height="32" Width="60" Margin="0,180,0,0" HorizontalAlignment="Left" Checked="from_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Moldova_flag_large-02.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>

            <RadioButton x:Name="toUSD" Content="USD" Height="32" Width="60" HorizontalAlignment="Right" Checked="to_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Flag_of_the_United_States.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="toEUR" Content="EUR" Height="32" Width="60" Margin="0,45,0,0" HorizontalAlignment="Right" Checked="to_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Flag_of_Europe.svg.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="toRUB" Content="RUB" Height="32" Width="60" Margin="0,90,0,0" HorizontalAlignment="Right" Checked="to_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Flag_of_Russia.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="toUAH" Content="UAH" Height="32" Width="60" Margin="0,135,0,0" HorizontalAlignment="Right" Checked="to_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/ukraine-flag_3000x2000.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <RadioButton x:Name="toMDL" Content="MDL" Height="32" Width="60" Margin="0,180,0,0" HorizontalAlignment="Right" Checked="to_Checked">
                <RadioButton.Background>
                    <ImageBrush ImageSource="/pics/Moldova_flag_large-02.png" Opacity="0.75"/>
                </RadioButton.Background>
            </RadioButton>
            <TextBlock Margin="100,63,0,0" Text="FROM" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="18">
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform AngleX="-20"/>
                        <RotateTransform Angle="-50"/>
                        <TranslateTransform X="-25" Y="25"/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
            <TextBlock Margin="500,63,0,0" Text="To" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="18">
                <TextBlock.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform AngleX="-20"/>
                        <RotateTransform Angle="50"/>
                        <TranslateTransform X="-25" Y="25"/>
                    </TransformGroup>
                </TextBlock.RenderTransform>
            </TextBlock>
        </Grid>


    </Grid>
</Window>   
